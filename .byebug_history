c
@restaurants
c
params
c
params
c
params
c
params
c
params
c
params
c
co
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
params
c
records_array
c
records_array
records_arary
c
params
c
records_array
c
records_array
c
records_array
c
records_array
c
params[:search][:query]
params
c
params
c
params
c
records_array
c
params
c
self.where("(lower(lunches.name) LIKE ? OR lower(lunches.description) LIKE ? OR lower(restaurants.name) LIKE ? OR lower(restaurants.address) LIKE ?)", query.downcase, query.downcase, query.downcase, query.downcase)
sefl.where("(lower(lunches.name) LIKE ? OR lower(lunches.description) LIKE ? OR lower(restaurants.name) LIKE ? OR lower(restaurants.address) LIKE ?)", query.downcase, query.downcase, query.downcase, query.downcase)
self
records_array
c
params[:search][:query]
params[:search]
params
c
@lunches
c
Lunches.joins(:restaurant).search(params[:search][:query])
@lunches
n
@lunches
c
Lunch.joins(:restaurant)
c
params
c
Lunch.all
c
@reservation.errors.full_messages
c
@reservation
c
@reservation
c
reservation_params
c
@reservation
params[:reservation]
params
c
@reservation.save!
@reservation
c
@reservation
params[:reservation]
params
c
ca
params
c
params
c
params
c
params[:filters][:bounds]
params
c
params
c
user_params
c
records_array
c
quit
bounds["southWest"]["lat"]
bounds
quit
bounds[:southWest]
bounds.southWest
bounds
bounds["southWest"]
bounds["southWest"]["lat"].to_f
bounds
